# Default values for ades.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: eoepca/proc-ades
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: ades.eoepca.com
      paths: ["/"]
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 2
  #   memory: 4Gi
  # requests:
  #   cpu: 1
  #   memory: 2Gi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

clusterAdminRoleName: cluster-admin

nodeSelector: {}

tolerations: []

affinity: {}

useKubeProxy: true

workflowExecutor:
  # Necessary if useKubeProxy set to false
  kubeconfig: ""

  # Here specify fixed inputs to all workflows execution in all stages (main, stage-in/out)
  # They will be prefixed with 'ADES_'. e.g. 'APP: ades' will be 'ADES_APP: ades'
  inputs:
    APP: ades

  main:
    cwl: ""

  stagein:
    cwl: ""

  stageout:
    cwl: ""

  rulez:
    cwl: ""
    
  # kubernetes storage class to be used for provisioning volumes. Must be a persistent volume claim compliant (glusterfs-storage)
  processingStorageClass: glusterfs-storage
  # Size of the Kubernetes Tmp Volumes
  processingVolumeTmpSize: "5Gi"
  # Size of the Kubernetes Output Volumes
  processingVolumeOutputSize: "10Gi"
  # Max ram to use for a job
  processingMaxRam: "16Gi"
  # Max number of CPU cores to use concurrently for a job
  processingMaxCores: "8"
  # if false the Ades will clean the volume after the workflow has successfully finished running
  processingKeepWorkspace: false
  # if false the Ades will clean the volume after the workflow has finished with an error
  processingKeepWorkspaceIfFailed: false
  # includes terradue.docker.com docker credentials
  imagePullSecrets: []
  # some configuration values for submitted pod
  pod:
    env: {}
      # HTTP_PROXY: http://1.2.3.4:8534

  useResourceManager: false
  resourceManagerEndpoint: "https://resourcemanager-api.com"
  resourceManagerWorkspacePrefix: "rm-user"

wps:
  pepBaseUrl: "https://pep.eoepca.terradue.com"
  pepClientStatePath: "/opt/zooservices_user/pepclient"
  usePep: "false"
  maincfgtpl: "files/main.cfg.tpl"


persistence:
  enabled: true
  # existingUserDataClaim:
  # existingProcServicesClaim:
  storageClass: "standard"
  userDataAccessMode: ReadWriteOnce
  userDataSize: 10Gi
  procServicesAccessMode: ReadWriteOnce
  procServicesSize: 5Gi

